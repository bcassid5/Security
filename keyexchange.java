/*
 * SE4472
 * Assignment 2 - Question 2
 * Ben Cassidy - 250808910
 * */

package keyexchange;
import java.io.IOException;
import java.math.BigInteger;

public class keyexchange {
	/*
	 *  =========================
		Values for Question 2
		=========================
		p = 327454814830879107005084559983937540620999771927590724375920536641886208384200886100832287233189957813210371270334671807234945559603670066271190686868192951585598967591659932386815068908731683296587391491576094005762186571748971597872804471563462770253729404898993052640639229265746366764575629356117212612483
		g = 3
		y_s = 270777412149929484001863390556812437650217372623256964473786247790081116293039231848340961609598350528119104342594404900999835706426623129587174483358517841533822239955333174228907887738542205020781526770060608262671493559426323466156179373688123191174601830514438528672878353156049874045807463762362474446252
	 * 
	 * */
	static String p_value = "327454814830879107005084559983937540620999771927590724375920536641886208384200886100832287233189957813210371270334671807234945559603670066271190686868192951585598967591659932386815068908731683296587391491576094005762186571748971597872804471563462770253729404898993052640639229265746366764575629356117212612483";
	static String g_value = "3";
	static String y_value = "270777412149929484001863390556812437650217372623256964473786247790081116293039231848340961609598350528119104342594404900999835706426623129587174483358517841533822239955333174228907887738542205020781526770060608262671493559426323466156179373688123191174601830514438528672878353156049874045807463762362474446252";

	// define BIGINTEGER type Variable 
	private static BigInteger g_num = new BigInteger(g_value);
	private static BigInteger p_num = new BigInteger(p_value);
	private static BigInteger ys_num = new BigInteger(y_value);

	//starting main class with  Input/Output exception(if any)
	public static void main(String[] args) throws IOException 
	{
		BigInteger yc, sharedSecret; 
	   
		//Client Side
		BigInteger studNumExponent = new BigInteger("250808910");
		yc = g_num.modPow(studNumExponent, p_num);
		System.out.println( "Client Public Key (yc): " + yc );
		
		//Server Side
		System.out.println( "Server public key (ys): " + ys_num );
		
		//Generate Shared Secret
		sharedSecret = yc.modPow(ys_num, p_num);
		System.out.println( "Shared Secret is: " + sharedSecret );
	}
}
